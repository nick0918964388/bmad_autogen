version: '3.8'

services:
  # 前端服務 - React + Mantine + Vite
  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./apps/frontend:/app
      - ./packages/shared-types:/app/packages/shared-types
      - /app/node_modules  # 避免本地 node_modules 覆蓋容器內的
    environment:
      - VITE_BACKEND_API_URL=http://10.10.10.168:8010/api
      - VITE_NODE_ENV=development
    depends_on:
      - backend
    networks:
      - smart-assistant-network
    restart: unless-stopped
    stdin_open: true
    tty: true

  # 後端服務 - FastAPI + Python
  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    ports:
      - "8010:8000"
    volumes:
      - ./apps/backend:/app
      - vector_db_data:/app/data/vector_db  # 向量資料庫儲存
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - HOST=0.0.0.0
      - PORT=8000
      - DATABASE_URL=postgresql://user:password@postgres:5432/smart_assistant
      - SECRET_KEY=your-secret-key-change-in-production
      - OLLAMA_API_BASE_URL=http://ollama.webtw.xyz:11434
      - OLLAMA_EMBEDDING_MODEL=all-minilm:l6-v2
      - VECTOR_DB_PATH=/app/data/vector_db
      - VECTOR_DB_TYPE=faiss
      - VECTOR_DIMENSION=384
      - EMBEDDING_BATCH_SIZE=10
    depends_on:
      - postgres
    networks:
      - smart-assistant-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 資料庫服務 - PostgreSQL
  postgres:
    image: postgres:16-alpine
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=smart_assistant
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - smart-assistant-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d smart_assistant"]
      interval: 10s
      timeout: 5s
      retries: 5

# 網路配置
networks:
  smart-assistant-network:
    driver: bridge
    name: smart-assistant-network

# 資料卷配置
volumes:
  postgres_data:
    driver: local
  vector_db_data:
    driver: local

# 備註：
# - 此文件為根目錄便捷版本，與 infrastructure/docker-compose.yml 同步
# - 目前配置僅包含前後端服務，用於基本的 Docker Compose 環境建置
# - Volume mount 支援開發模式的熱重載
# - 自定義網路允許服務間通訊